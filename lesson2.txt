＃double型(小数)
これまで数値は、int型（整数）しか使ってきませんでしたが、小数を表すデータ型も存在します。
そのひとつがdouble型です。重要なデータ型なので覚えておきましょう。
またJavaの世界にはまだ多くのデータ型が存在します。
興味のある人は、「Java データ型」といった具合に調べてみてください。

数値にデータ型

  5      ・・・     int型
(整数)

3.14     ・・・     double型
(小数)


＃double型
整数とは「3」「-39」のように小数点以下を持たない数です。対して小数とは「3.28」「-5.7」のように小数点以下を持つ数になります。
大きさは同じでも、3はint型ですが、3.0はdouble型になります。int型と同様に変数の定義ではデータ型にdoubleを指定します。

double number = 5.28;
System.out.println(number);

出力結果
5.28


＃小数同士の計算
double型も数値ですので、下図のように計算が可能です。

double number1 = 8.5;
double number2 = 3.4;

System.out.println(number1 + number2);
System.out.println(number1 - number2);

出力結果
11.9
5.1


＃型変換について
「+」などの操作は同じデータ型同士でないとできません。よって型の違うものを演算するときは、型を変換し同じ型にしてあげます。
Javaではこの型変換の方法として、自動の変換と手動の変換があります。まずは自動型変換を学びましょう。
下図のようにString型とint型を足すと、int型が自動でString型に変換され、文字列の結合が行われます。

System.out.println("佐藤さんは" + 23 + "歳です");
23 ⇒ String型に変換される ⇒ 「"佐藤さんは" + "23" + "歳です"」と変換される

出力結果
佐藤さんは23歳です


＃数値の計算の注意点
数値の自動型変換を学ぶ前に、数値計算における注意点を学びましょう。
int型同士の計算は結果もint型になり、double型同士の計算は、結果もdouble型になります。
下図でその事実を確認しましょう。
特に、int型の5をint型の2で割ると、結果は「2.5」ではなく「2」となることに注意しましょう。

System.out.println(5 / 2);
(5 / 2)がint型同士の計算 

System.out.println(5.0 / 2.0);
(5.0 / 2.0)がdouble型同士の計算

出力結果
  2 ・・・・  int型
2.5 ・・・・  double型